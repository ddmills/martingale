{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/geotic/build/geotic.js","src/app.js","src/boot.js","src/components/agent.js","src/components/bounds.js","src/components/index.js","src/components/position-bound-sprite.js","src/components/position.js","src/components/renderable.js","src/components/spawnable.js","src/components/sprite.js","src/entities/entity-factory.js","src/entities/fox.js","src/entities/index.js","src/entities/pine-tree.js","src/entities/shrub.js","src/entities/tower.js","src/input/command-queue.js","src/input/commands/command.js","src/input/commands/spawn-entity-command.js","src/input/controllers/input-controller.js","src/input/controllers/map-input-controller.js","src/phaser/bootstrap.js","src/phaser/tile.js","src/prefabs/map.js","src/states/game.js","src/states/loading.js","src/states/preload.js","src/systems/agent-system.js","src/systems/bounds-system.js"],"names":[],"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","file":"boot.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _id = 0;\nvar id = function id() {\n  return ++_id;\n};\n\nvar hash = function hash(n) {\n  return n.sort(function (a, b) {\n    return a > b;\n  }).join('$');\n};\nvar remove = function remove(a, v) {\n  return a.splice(a.indexOf(v), 1);\n};\nvar getComponent = function getComponent(n) {\n  return components.get(n) || newComponent(n);\n};\nvar clone = function clone(o) {\n  return JSON.parse(JSON.stringify(o));\n};\nvar sigs = new Map();\nvar tsigs = new Map();\nvar tags = new Map();\nvar entities = [];\nvar components = new Map();\n\nvar Signature = function () {\n  function Signature(n) {\n    var _this = this;\n\n    _classCallCheck(this, Signature);\n\n    this.na = n;\n    this.en = [];\n    entities.forEach(function (e) {\n      return _this.onAdd(e);\n    });\n  }\n\n  _createClass(Signature, [{\n    key: 'match',\n    value: function match(e) {\n      var k = Object.keys(e.components);\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.na[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var n = _step.value;\n\n          if (!k.includes(n)) return false;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: 'onAdd',\n    value: function onAdd(e) {\n      if (this.en.includes(e)) return;\n      this.match(e) && this.en.push(e);\n    }\n  }, {\n    key: 'onRem',\n    value: function onRem(e, c) {\n      this.na.includes(c) && remove(this.en, e);\n    }\n  }], [{\n    key: 'get',\n    value: function get(n) {\n      var h = hash(n);\n      return sigs.has(h) ? sigs.get(h) : Signature.make(n, h);\n    }\n  }, {\n    key: 'make',\n    value: function make(n, h) {\n      var t = new Signature(n);\n      sigs.set(h, t);\n      return t;\n    }\n  }]);\n\n  return Signature;\n}();\n\nvar TagSignature = function (_Signature) {\n  _inherits(TagSignature, _Signature);\n\n  function TagSignature() {\n    _classCallCheck(this, TagSignature);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(TagSignature).apply(this, arguments));\n  }\n\n  _createClass(TagSignature, [{\n    key: 'match',\n    value: function match(e) {\n      var k = Object.keys(e.tags);\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.na[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var n = _step2.value;\n\n          if (!k.includes(n)) return false;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      this.en.push(e);\n    }\n  }], [{\n    key: 'get',\n    value: function get(n) {\n      var h = hash(n);\n      return tsigs.has(h) ? tsigs.get(h) : TagSignature.make(n, h);\n    }\n  }, {\n    key: 'make',\n    value: function make(n, h) {\n      var t = new TagSignature(n);\n      tsigs.set(h, t);\n      return t;\n    }\n  }]);\n\n  return TagSignature;\n}(Signature);\n\nvar reserve = ['id', 'listeners', 'serialize', 'deserialize', 'add', 'remove', 'has', 'destroy', 'tag', 'tags', 'untag', 'components', 'on', 'off', 'once', 'emit'];\n\nvar Entity = function () {\n  function Entity(id) {\n    _classCallCheck(this, Entity);\n\n    this.id = id;\n    this.tags = {};\n    this.listeners = new Map();\n  }\n\n  _createClass(Entity, [{\n    key: 'serialize',\n    value: function serialize() {\n      var _this3 = this;\n\n      return {\n        id: this.id,\n        tags: Object.keys(this.t),\n        components: function () {\n          var s = [];\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = Object.keys(_this3.components)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var n = _step3.value;\n\n              s.push({\n                name: n,\n                value: _this3[n].serialize ? _this3[n].serialize() : clone(_this3[n])\n              });\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n\n          return s;\n        }()\n      };\n    }\n  }, {\n    key: 'add',\n    value: function add(n) {\n      for (var _len = arguments.length, a = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        a[_key - 1] = arguments[_key];\n      }\n\n      attachTo(this, n, getComponent(n).apply(undefined, [this].concat(a)));\n      return this;\n    }\n  }, {\n    key: 'remove',\n    value: function remove(n) {\n      var _n,\n          _this4 = this;\n\n      if (!this[n]) return;\n\n      for (var _len2 = arguments.length, a = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        a[_key2 - 1] = arguments[_key2];\n      }\n\n      this[n].unmount && (_n = this[n]).unmount.apply(_n, [this].concat(a));\n      delete this[n];\n      sigs.forEach(function (t) {\n        return t.onRem(_this4, n);\n      });\n      return this;\n    }\n  }, {\n    key: 'mandate',\n    value: function mandate(n) {\n      for (var _len3 = arguments.length, a = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n        a[_key3 - 1] = arguments[_key3];\n      }\n\n      if (!this[n]) this.add.apply(this, [n].concat(a));\n      return this[n];\n    }\n  }, {\n    key: 'has',\n    value: function has(n) {\n      return !!this[n];\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      _destroy(this);\n    }\n  }, {\n    key: 'tag',\n    value: function tag(n) {\n      var _this5 = this;\n\n      var a = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n      var t = getTag(n);\n      Object.assign(t, a);\n      if (n in this.tags) return this;\n      this.tags[n] = t;\n      tsigs.forEach(function (t) {\n        return t.onAdd(_this5);\n      });\n      return this;\n    }\n  }, {\n    key: 'untag',\n    value: function untag(n) {\n      var _this6 = this;\n\n      if (!this.tags[n]) return;\n      delete this.tags[n];\n      tsigs.forEach(function (t) {\n        return t.onRem(_this6, n);\n      });\n      return this;\n    }\n  }, {\n    key: 'on',\n    value: function on(e, f) {\n      this.listeners.has(e) || this.listeners.set(e, []);\n      this.listeners.get(e).push(f);\n      return this;\n    }\n  }, {\n    key: 'once',\n    value: function once(e, f) {\n      var _this7 = this;\n\n      var fn = function fn() {\n        _this7.off(e, f);\n        f.apply(undefined, arguments);\n      };\n      fn._ = f;\n      return this.on(e, fn);\n    }\n  }, {\n    key: 'off',\n    value: function off(e, f) {\n      var ls = this.listeners.get(e);\n      if (ls && ls.length) {\n        ls.forEach(function (l, i) {\n          if (l === f || l._ === f) {\n            ls.splice(i, 1);\n          }\n        });\n      }\n\n      ls.length ? this.listeners.set(e, ls) : this.listeners.delete(e);\n\n      return this;\n    }\n  }, {\n    key: 'emit',\n    value: function emit(e) {\n      for (var _len4 = arguments.length, a = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n        a[_key4 - 1] = arguments[_key4];\n      }\n\n      var ls = this.listeners.get(e);\n      if (ls && ls.length) {\n        ls.forEach(function (l) {\n          return l.apply(undefined, a);\n        });\n      }\n      return this;\n    }\n  }, {\n    key: 'components',\n    get: function get() {\n      var _this8 = this;\n\n      var c = {};\n      Object.keys(this).filter(function (k) {\n        return !reserve.includes(k);\n      }).forEach(function (k) {\n        return c[k] = _this8[k];\n      });\n      return c;\n    }\n  }], [{\n    key: 'deserialize',\n    value: function deserialize(d) {\n      var e = entity(d.id);\n      d.tags.forEach(function (t) {\n        return e.tag(t);\n      });\n      d.components.forEach(function (c) {\n        var m = getComponent(c.name);\n        if (m.deserialize) {\n          attachTo(e, c.name, m.deserialize(e, c.value));\n        } else {\n          if (_typeof(c.value) !== 'object') {\n            attachTo(e, c.name, c.value);\n            return;\n          }\n          var ins = m(e) || {};\n          Object.assign(ins, c.value);\n          attachTo(e, c.name, ins);\n        }\n      });\n    }\n  }]);\n\n  return Entity;\n}();\n\nvar attachTo = function attachTo(e, n, c) {\n  e[n] = c;\n  c.mount && c.mount(e);\n  sigs.forEach(function (s) {\n    return s.onAdd(e);\n  });\n};\n\nvar newComponent = function newComponent(n) {\n  var c = function c(entity) {};\n  components.set(n, c);\n  return c;\n};\n\nvar newTag = function newTag(n) {\n  var t = {};\n  tags.set(n, t);\n  return t;\n};\n\nvar szTags = function szTags() {\n  return [].concat(_toConsumableArray(tags)).map(function (v) {\n    return {\n      name: v[0],\n      value: v[1].serialize ? v[1].serialize() : clone(v[1])\n    };\n  });\n};\n\nvar szEnts = function szEnts() {\n  return entities.map(function (e) {\n    return e.serialize();\n  });\n};\nvar getTag = exports.getTag = function getTag(n) {\n  return tags.get(n) || newTag(n);\n};\nvar component = exports.component = function component(n, d) {\n  if (reserve.includes(n)) throw 'Cannot use a reserved keyword as a component';\n  components.set(n, d);\n};\nvar findByComponent = exports.findByComponent = function findByComponent() {\n  for (var _len5 = arguments.length, n = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    n[_key5] = arguments[_key5];\n  }\n\n  return Signature.get(n).en;\n};\nvar findByTag = exports.findByTag = function findByTag() {\n  for (var _len6 = arguments.length, n = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    n[_key6] = arguments[_key6];\n  }\n\n  return TagSignature.get(n).en;\n};\nvar findById = exports.findById = function findById(id) {\n  return entities.find(function (e) {\n    return e.id === id;\n  });\n};\nvar serialize = exports.serialize = function serialize() {\n  return { tags: szTags(), entities: szEnts() };\n};\nvar entity = exports.entity = function entity() {\n  var i = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];\n\n  var e = new Entity(i || id());\n  entities.push(e);\n  sigs.forEach(function (t) {\n    return t.match(e);\n  });\n  return e;\n};\n\nvar deserialize = exports.deserialize = function deserialize(data) {\n  data.tags.forEach(function (t) {\n    return Object.assign(getTag(t.name), t.value);\n  });\n  data.entities.forEach(function (e) {\n    return Entity.deserialize(e);\n  });\n};\n\nvar _destroy = function _destroy(e) {\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    for (var _iterator4 = Object.keys(e.components)[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      var n = _step4.value;\n      e.remove(n);\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4.return) {\n        _iterator4.return();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion5 = true;\n  var _didIteratorError5 = false;\n  var _iteratorError5 = undefined;\n\n  try {\n    for (var _iterator5 = Object.keys(e.tags)[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n      var t = _step5.value;\n      e.untag(t);\n    }\n  } catch (err) {\n    _didIteratorError5 = true;\n    _iteratorError5 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion5 && _iterator5.return) {\n        _iterator5.return();\n      }\n    } finally {\n      if (_didIteratorError5) {\n        throw _iteratorError5;\n      }\n    }\n  }\n\n  remove(entities, e);\n};\n\nexports.destroy = _destroy;\nvar clear = exports.clear = function clear() {\n  entities.forEach(function (e) {\n    return e.destroy();\n  });\n  sigs = new Map();\n  tsigs = new Map();\n  tags = new Map();\n  entities = [];\n};\n\nexports.default = {\n  clear: clear,\n  entity: entity,\n  getTag: getTag,\n  destroy: _destroy,\n  findById: findById,\n  findByTag: findByTag,\n  serialize: serialize,\n  deserialize: deserialize,\n  component: component,\n  findByComponent: findByComponent\n};","import EntityFactory from './entities/entity-factory';\r\nimport CommandQueue from './input/command-queue';\r\nimport MapInputController from './input/controllers/map-input-controller';\r\nimport Map from './prefabs/map';\r\nimport BoundSystem from './systems/bounds-system';\r\nimport AgentSystem from './systems/agent-system';\r\n\r\nclass App {\r\n  init(game) {\r\n    this.game = game;\r\n    this.input = this.game.input;\r\n    this.create = new EntityFactory;\r\n    this.map = new Map('paradise');\r\n    this.commandQueue = new CommandQueue();\r\n    this.inputController = new MapInputController();\r\n    this.systems = {\r\n      bounds: new BoundSystem,\r\n      agents: new AgentSystem,\r\n    };\r\n\r\n    // this.systems.bounds.debug = true;\r\n  }\r\n\r\n  get constants() {\r\n    return {\r\n      'TILE_SIZE': 16,\r\n      'MAP_WIDTH': 16,\r\n    };\r\n  }\r\n\r\n  worldX(x) {\r\n    return x * this.constants.TILE_SIZE;\r\n  }\r\n\r\n  worldY(y) {\r\n    return y * this.constants.TILE_SIZE;\r\n  }\r\n\r\n  tileX(worldX) {\r\n    return Math.floor(worldX / this.constants.TILE_SIZE);\r\n  }\r\n\r\n  tileY(worldY) {\r\n    return Math.floor(worldY / this.constants.TILE_SIZE);\r\n  }\r\n\r\n  update() {\r\n    this.inputController.handle();\r\n    this.commandQueue.processAll();\r\n    this.systems.bounds.update();\r\n    this.systems.agents.update(this.game.time.elapsedMS);\r\n  }\r\n};\r\n\r\nlet app = new App;\r\n\r\nexport { app };\r\nexport default app;\r\n","import './phaser/bootstrap';\r\nimport Preload from './states/preload';\r\nimport Loading from './states/loading';\r\nimport Game from './states/game';\r\nimport './components';\r\nimport './entities';\r\n\r\nclass Boot extends Phaser.Game {\r\n  constructor() {\r\n    super(16 * 16, 16 * 16, Phaser.AUTO, 'game-container', null, false, false);\r\n\r\n    this.state.add('Preload', Preload);\r\n    this.state.add('Loading', Loading);\r\n    this.state.add('Game', Game);\r\n\r\n    this.state.start('Preload');\r\n  }\r\n};\r\n\r\nnew Boot;\r\n","import { component } from 'geotic';\r\nimport { app } from './../app';\r\n\r\nclass Agent {\r\n  constructor(behavior) {\r\n    this.behavior = behavior;\r\n  }\r\n\r\n  update(dt) {\r\n    this.behavior(dt);\r\n  }\r\n}\r\n\r\ncomponent('agent', (entity, behavior = (dt) => {}) => {\r\n  entity.mandate('position');\r\n  return new Agent(behavior);\r\n});\r\n","import { component } from 'geotic';\r\nimport app from '../app';\r\n\r\nclass Bounds {\r\n  constructor(position, width = 1, height = 1, offsetX = 0, offsetY = 0) {\r\n    this.position = position;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.offsetX = offsetX;\r\n    this.offsetY = offsetY;\r\n  }\r\n\r\n  get worldX() {\r\n    return app.worldX(this.leftBound);\r\n  }\r\n\r\n  get worldY() {\r\n    return app.worldY(this.topBound);\r\n  }\r\n\r\n  get worldWidth() {\r\n    return this.width * app.constants.TILE_SIZE;\r\n  }\r\n\r\n  get worldHeight() {\r\n    return this.height * app.constants.TILE_SIZE;\r\n  }\r\n\r\n  get leftBound() {\r\n    return this.position.x + this.offsetX;\r\n  }\r\n\r\n  get rightBound() {\r\n    return this.position.x + this.width + this.offsetX;\r\n  }\r\n\r\n  get topBound() {\r\n    return this.position.y + this.offsetY;\r\n  }\r\n\r\n  get bottomBound() {\r\n    return this.position.y + this.height + this.offsetY;\r\n  }\r\n\r\n  contains(x, y) {\r\n    return x > this.leftBound\r\n      && x < this.rightBound\r\n      && y > this.topBound\r\n      && y < this.bottomBound;\r\n  }\r\n\r\n  collidesLeft(other) {\r\n    return this.leftBound < other.rightBound && this.leftBound >= other.leftBound;\r\n  }\r\n\r\n  collidesRight(other) {\r\n    return this.rightBound > other.leftBound && this.rightBound <= other.rightBound;\r\n  }\r\n\r\n  collidesTop(other) {\r\n    return this.topBound < other.bottomBound && this.topBound >= other.topBound;\r\n  }\r\n\r\n  collidesBottom(other) {\r\n    return this.bottomBound > other.topBound && this.bottomBound <= other.bottomBound;\r\n  }\r\n\r\n  collidesWith(other) {\r\n    return (other != this)\r\n      && (this.collidesLeft(other) || this.collidesRight(other))\r\n      && (this.collidesTop(other) || this.collidesBottom(other));\r\n  }\r\n\r\n  debug() {\r\n    const rect = new Phaser.Rectangle(\r\n      this.worldX,\r\n      this.worldY,\r\n      this.worldWidth,\r\n      this.worldHeight\r\n    );\r\n\r\n    app.game.debug.rectangle(rect, '#e300ff', false);\r\n  }\r\n}\r\n\r\ncomponent('bounds', (entity, ...args) => {\r\n  const position = entity.mandate('position');\r\n  return new Bounds(position, ...args);\r\n});\r\n","export { default as sprite } from './sprite';\nexport { default as renderable } from './renderable';\nexport { default as spawnable } from './spawnable';\nexport { default as position } from './position';\nexport { default as bounds } from './bounds';\nexport { default as agent } from './agent';\nexport { default as positionBoundSprite } from './position-bound-sprite';\n","import { component } from 'geotic';\r\nimport { app } from './../app';\r\n\r\nclass PositionBoundSprite {\r\n  constructor(position, sprite, offsetX = 0, offsetY = 0) {\r\n    this.position = position;\r\n    this.sprite = sprite;\r\n    this.offsetX = offsetX;\r\n    this.offsetY = offsetY;\r\n    this.synchronizeSprite()\r\n  }\r\n\r\n  synchronizeSprite() {\r\n    this.sprite.x = this.position.worldX + this.offsetX;\r\n    this.sprite.y = this.position.worldY + this.offsetY;\r\n  }\r\n}\r\n\r\ncomponent('position-bound-sprite', (entity, ...args) => {\r\n  const position = entity.mandate('position');\r\n  const sprite = entity.mandate('sprite');\r\n  const binder = new PositionBoundSprite(position, sprite, ...args);\r\n\r\n  entity.on('position-changed', binder.synchronizeSprite.bind(binder));\r\n\r\n  return binder;\r\n});\r\n","import { component } from 'geotic';\r\nimport { app } from './../app';\r\n\r\nclass Position {\r\n  constructor(entity, x = 0, y = 0) {\r\n    this.entity = entity;\r\n    this._x = x;\r\n    this._y = y;\r\n  }\r\n\r\n  get compacted() {\r\n    return {\r\n      x: this._x,\r\n      y: this._y,\r\n    };\r\n  }\r\n\r\n  set x(newX) {\r\n    const oldPosition = this.compacted;\r\n    this._x = newX;\r\n    const newPosition = this.compacted;\r\n    this.entity.emit('position-changed', oldPosition, newPosition);\r\n  }\r\n\r\n  set y(newY) {\r\n    const oldPosition = this.compacted;\r\n    this._y = newY;\r\n    const newPosition = this.compacted;\r\n    this.entity.emit('position-changed', oldPosition, newPosition);\r\n  }\r\n\r\n  get x() { return this._x; }\r\n  get y() { return this._y; }\r\n\r\n  get worldX() {\r\n    return this._x * app.constants.TILE_SIZE;\r\n  }\r\n\r\n  get worldY() {\r\n    return this._y * app.constants.TILE_SIZE;\r\n  }\r\n}\r\n\r\ncomponent('position', (entity, x = 0, y = 0) => new Position(entity, x, y));\r\n","import { component } from 'geotic';\r\nimport { app } from './../app';\r\n\r\nclass Renderable {\r\n  constructor(subject) {\r\n    this.subject = subject;\r\n  }\r\n\r\n  render(canvas) {\r\n    return canvas.add(this.subject);\r\n  }\r\n}\r\n\r\ncomponent('renderable', (entity, subject) => {\r\n  const r = new Renderable(subject);\r\n  entity.render = r.render.bind(r);\r\n  return r;\r\n});\r\n","import { component } from 'geotic';\r\nimport { app } from './../app';\r\n\r\nclass Spawnable {\r\n  constructor(entity, test) {\r\n    this.entity = entity;\r\n    this.test = test;\r\n    this.entity.spawn = this.spawn.bind(this);\r\n    this.entity.canSpawnAt = this.canSpawnAt.bind(this);\r\n  }\r\n\r\n  canSpawnAt(x, y) {\r\n    return this.test(x, y);\r\n  }\r\n\r\n  spawn() {\r\n    this.entity.emit('spawn');\r\n    return this.entity;\r\n  }\r\n}\r\n\r\ncomponent('spawnable', (entity, test = () => {}) => new Spawnable(entity, test));\r\n","import { component } from 'geotic';\r\nimport { app } from './../app';\r\n\r\ncomponent('sprite', (entity, ...args) => {\r\n  let x, y = 0;\r\n  let key, frame = null;\r\n\r\n  switch(args.length) {\r\n    case 0:\r\n      break;\r\n    case 1:\r\n      key = args[0];\r\n      break;\r\n    case 2:\r\n      key = args[0];\r\n      frame = args[1];\r\n      break;\r\n    case 3:\r\n      x = args[0];\r\n      y = args[1];\r\n      key = args[2];\r\n      break;\r\n    case 4:\r\n      x = args[0];\r\n      y = args[1];\r\n      key = args[2];\r\n      frame = args[3];\r\n      break;\r\n  }\r\n\r\n  const sprite = new Phaser.Sprite(app.game, x, y, key, frame);\r\n  sprite.unmount = (e) => {\r\n    sprite.destroy();\r\n  };\r\n\r\n  entity.mandate('renderable', sprite);\r\n  return sprite;\r\n});\r\n","import entities from './index';\r\n\r\nexport default class EntityFactory {\r\n  tower(x, y) {\r\n    return entities.tower(x, y);\r\n  }\r\n  shrub(x, y) {\r\n    return entities.shrub(x, y);\r\n  }\r\n  pineTree(x, y) {\r\n    return entities.pineTree(x, y);\r\n  }\r\n  fox(x, y) {\r\n    return entities.fox(x, y);\r\n  }\r\n}\r\n","import { entity } from 'geotic';\r\nimport geotic from 'geotic';\r\nimport app from '../app';\r\n\r\nexport default (x, y) => {\r\n  const fox = entity()\r\n    .add('position', x, y)\r\n    .add('sprite', 'fox')\r\n    .add('position-bound-sprite')\r\n    .add('spawnable', (x, y) => {\r\n      return geotic\r\n        .findByComponent('bounds')\r\n        .every(e => !fox.bounds.collidesWith(e.bounds));\r\n    })\r\n    .add('bounds')\r\n    .add('agent', dt => {\r\n      fox.position.x = fox.position.x - dt * .001;\r\n      if (fox.position.x <= - fox.bounds.width) {\r\n        fox.position.x = app.constants.MAP_WIDTH;\r\n      }\r\n    })\r\n    .once('spawn', () => {\r\n      fox.render(app.map.static);\r\n      app.map.static.sort('y');\r\n      console.log('fox spawned.');\r\n    });\r\n\r\n  return fox;\r\n};\r\n","import tower from './tower';\nimport shrub from './shrub';\nimport fox from './fox';\nimport pineTree from './pine-tree';\n\nexport { tower };\nexport { shrub };\nexport { pineTree };\nexport { fox };\nexport default { tower, shrub, pineTree, fox };\n","import { entity } from 'geotic';\r\nimport geotic from 'geotic';\r\nimport app from '../app';\r\n\r\nexport default (x, y) => {\r\n  const tree = entity()\r\n    .add('position', x, y)\r\n    .add('sprite', 'pine-tree')\r\n    .add('position-bound-sprite', 0, -16)\r\n    .add('spawnable', (x, y) => {\r\n      return geotic\r\n        .findByComponent('bounds')\r\n        .every(e => !tree.bounds.collidesWith(e.bounds));\r\n    })\r\n    .add('bounds')\r\n    .once('spawn', () => {\r\n      tree.render(app.map.static);\r\n      app.map.static.sort('y');\r\n      console.log('tree spawned.');\r\n    });\r\n\r\n  return tree;\r\n};\r\n","import { entity } from 'geotic';\r\nimport app from '../app';\r\n\r\nexport default (x, y) => {\r\n  const shrub = entity()\r\n    .add('sprite', app.worldX(x), app.worldY(y), 32, 32, 'shrub')\r\n    .add('spawnable')\r\n    .on('spawn', () => shrub.render(app.map.static));\r\n\r\n  return shrub;\r\n};\r\n","import { entity } from 'geotic';\r\nimport app from '../app';\r\n\r\nexport default (x, y) => {\r\n  const tower = entity()\r\n    .add('sprite', app.worldX(x), app.worldY(y) - 16, 16, 32, 'tower')\r\n    .add('spawnable');\r\n    // .on('spawn', () => tower.render(app.map.walls));\r\n\r\n  return tower;\r\n};\r\n","export default class CommandQueue {\r\n  constructor(commands = []) {\r\n    this.commands = [];\r\n    commands.forEach(c => this.push(c));\r\n  }\r\n\r\n  process() {\r\n    if (this.commands.length) {\r\n      const command = this.commands.shift();\r\n      command.execute();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  processAll() {\r\n    this.process() && this.processAll();\r\n  }\r\n\r\n  push(command) {\r\n    this.commands.push(command);\r\n  }\r\n}\r\n","export default class Command {\r\n  execute() {\r\n  }\r\n}\r\n","import Command from './command';\r\n\r\nexport default class SpawnEntityCommand extends Command {\r\n  constructor(entity) {\r\n    super();\r\n    this.entity = entity;\r\n  }\r\n\r\n  execute() {\r\n    this.entity.spawn();\r\n  }\r\n}\r\n","export default class InputController {\r\n  constructor(queue) {\r\n    this.queue = queue;\r\n  }\r\n\r\n  handle() {\r\n  }\r\n\r\n  queueCommand(command) {\r\n    this.queue.push(command);\r\n  }\r\n}\r\n","import SpawnEntityCommand from '../commands/spawn-entity-command';\r\nimport InputController from './input-controller';\r\nimport app from '../../app';\r\n\r\nexport default class MapInputController extends InputController {\r\n  constructor() {\r\n    super(app.commandQueue);\r\n    this.cursor = app.cursor;\r\n    this.oldMouseX = 0;\r\n    this.oldMouseY = 0;\r\n  }\r\n\r\n  handle() {\r\n    this.mouseX = app.input.activePointer.worldX;\r\n    this.mouseY = app.input.activePointer.worldY;\r\n    this.tileX = app.tileX(this.mouseX);\r\n    this.tileY = app.tileY(this.mouseY);\r\n\r\n    if (this.leftMouseButtonDown) {\r\n      // const pine = app.create.pineTree(this.tileX, this.tileY);\r\n      const fox = app.create.fox(this.tileX, this.tileY);\r\n\r\n      if (fox.canSpawnAt(this.tileX, this.tileY)) {\r\n        const command = new SpawnEntityCommand(fox);\r\n        this.queueCommand(command);\r\n      } else {\r\n        fox.destroy();\r\n      }\r\n    }\r\n\r\n    if (this.rightMouseButtonDown) {\r\n      console.log('rmb');\r\n    }\r\n\r\n    this.oldMouseX = this.mouseX;\r\n    this.oldMouseY = this.mouseY;\r\n  }\r\n\r\n  get mousePositionChanged() {\r\n    return this.oldMouseX != this.mouseX || this.oldMouseY != this.mouseY;\r\n  }\r\n\r\n  get leftMouseButtonDown() {\r\n    return app.input.mousePointer.leftButton.isDown\r\n  }\r\n\r\n  get rightMouseButtonDown() {\r\n    return app.input.mousePointer.rightButton.isDown\r\n  }\r\n}\r\n","import Tile from './tile';\r\n\r\nPhaser.Tile = Tile;\r\n","export default class Tile extends Phaser.Tile {\r\n  /**\r\n   * Get binary sum of all neighbors.\r\n   */\r\n  binarySum(test) {\r\n    let sum = 0;\r\n    let multiplier = 256;\r\n\r\n    for (let i = -1; i <= 1; i++) {\r\n      const y = this.y - i;\r\n      const row = this.layer.data[y];\r\n\r\n      for (let j = -1; j <= 1; j++) {\r\n        if (i === 0 && j === 0) continue;\r\n        const x = this.x - j;\r\n        const tile = row && x in row ? row[x] : null;\r\n\r\n        if (test(tile)) sum += multiplier;\r\n\r\n        multiplier /= 2;\r\n      }\r\n    }\r\n\r\n    return sum;\r\n  }\r\n\r\n  /**\r\n   * Get binary sum of neighbors only taking into account\r\n   * the top, left, right, and bottom tiles.\r\n   */\r\n  binarySumSimple(test) {\r\n    let sum = 0;\r\n\r\n    const getNeighbor = (x, y) => {\r\n      if (y in this.layer.data) {\r\n        if (x in this.layer.data[y]) return this.layer.data[x][y];\r\n      }\r\n      return null;\r\n    };\r\n\r\n    const top = getNeighbor(this.y - 1, this.x);\r\n    const left = getNeighbor(this.y, this.x - 1);\r\n    const right = getNeighbor(this.y, this.x + 1);\r\n    const bottom = getNeighbor(this.y + 1, this.x);\r\n\r\n    if (test(top)) sum += 4;\r\n    if (test(left)) sum += 16;\r\n    if (test(right)) sum += 32;\r\n    if (test(bottom)) sum += 128;\r\n\r\n    return sum;\r\n  }\r\n\r\n  /**\r\n   * Boolean check if this tile exists on the layer boundary\r\n   */\r\n  atBoundary() {\r\n    return this.x === 0\r\n      || this.y === 0\r\n      || this.x === this.layer.width - 1\r\n      || this.y === this.layer.height - 1;\r\n  }\r\n}\r\n","import app from '../app';\r\n\r\nexport default class Map {\r\n  constructor(level) {\r\n    this.tilemap = app.game.add.tilemap(level);\r\n    this.tilemap.addTilesetImage('terrain', 'terrain');\r\n\r\n    this.background = this.tilemap.createLayer('background');\n\n    this.static = app.game.add.group();\r\n  }\r\n}\r\n","import app from '../app';\r\nimport entities from '../entities';\r\n\r\nexport default class Game extends Phaser.State {\r\n  create() {\r\n    app.init(this.game);\r\n\r\n    app.create.pineTree(8, 4).spawn();\r\n    app.create.pineTree(6, 5).spawn();\r\n    app.create.fox(14, 6).spawn();\r\n  }\r\n\r\n  update() {\r\n    app.update();\r\n  }\r\n};\r\n","export default class Loading extends Phaser.State {\r\n  preload() {\r\n    this.game.stage.smoothed = false;\r\n    this.loadingBar = this.game.add.sprite(this.game.world.centerX, this.game.world.centerY + 128, 'loading-bar');\r\n    this.loadingBar.anchor.setTo(0.5);\r\n    this.load.setPreloadSprite(this.loadingBar);\r\n\r\n    this.load.image('ground', 'img/ground.png');\r\n    this.load.image('terrain', 'img/terrain-16.png');\r\n    this.load.image('wall', 'img/walls.png');\r\n    this.load.image('tower', 'img/tower.png');\r\n    this.load.image('flag', 'img/flag.png');\r\n    this.load.image('shrub', 'img/shrub.png');\r\n    this.load.image('pine-tree', 'img/pine-tree.png');\r\n    this.load.image('fox', 'img/fox.png');\r\n\r\n    this.load.tilemap('island', 'maps/island.json', null, Phaser.Tilemap.TILED_JSON);\r\n    this.load.tilemap('crazytown', 'maps/crazytown.json', null, Phaser.Tilemap.TILED_JSON);\r\n    this.load.tilemap('tiny', 'maps/tiny.json', null, Phaser.Tilemap.TILED_JSON);\r\n    this.load.tilemap('paradise', 'maps/paradise.json', null, Phaser.Tilemap.TILED_JSON);\r\n\r\n    this.load.spritesheet('cursor', 'img/cursor.png', 16, 16);\r\n    this.load.atlas('walls', 'img/walls.png', 'atlas/walls.json');\r\n    this.load.atlas('interior', 'img/interior-orange.png', 'atlas/interior.json');\r\n  }\r\n\r\n  create() {\r\n    this.game.stage.smoothed = false;\r\n    this.stage.backgroundColor = '#306082';\r\n    this.state.start('Game');\r\n  }\r\n};\r\n","export default class Preload extends Phaser.State {\r\n  preload() {\r\n    this.game.load.image('loading-bar', 'img/loading-bar.png');\r\n  }\r\n\r\n  create() {\r\n    this.game.stage.backgroundColor = '#306082';\r\n    this.game.scale.scaleMode = Phaser.ScaleManager.USER_SCALE;\r\n    this.game.scale.setUserScale(2, 2);\r\n\r\n    this.game.renderer.renderSession.roundPixels = true;\r\n    Phaser.Canvas.setImageRenderingCrisp(this.game.canvas);\r\n\r\n    this.state.start('Loading');\r\n  }\r\n};\r\n","import geotic from 'geotic';\r\nimport app from '../app';\r\n\r\nexport default class AgentSystem {\r\n  constructor() {\r\n  }\r\n\r\n  update(dt) {\r\n    const actors = geotic.findByComponent('agent');\r\n\r\n    actors.forEach(actor => {\r\n      actor.agent.update(dt);\r\n    });\r\n  }\r\n}\r\n","import geotic from 'geotic';\r\nimport app from '../app';\r\n\r\nexport default class BoundsSystem {\r\n  constructor() {\r\n    this.debug = false;\r\n  }\r\n\r\n  update() {\r\n    const actors = geotic.findByComponent('bounds');\r\n\r\n    if (this.debug) {\r\n      actors.forEach(actor => {\r\n        actor.bounds.debug();\r\n      });\r\n    } else {\r\n      app.game.debug.reset();\r\n    }\r\n  }\r\n}\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}